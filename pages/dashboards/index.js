/* eslint-disable @next/next/no-img-element */
import { getSession, useSession } from "next-auth/react";
import Head from "next/head";
import { useEffect, useState } from "react";
import Card from "../../components/Card/Card";
import Layout from "../../components/Layout/Layout";
import Pagination from "../../components/Pagination/Pagination";
import { getTvShow } from "../../services";

export default function Home() {
  const [allTvShow, setAllTvShow] = useState([]);
  const [filteredShows, setFilteredShows] = useState([]);

  const { data: session } = useSession();

  useEffect(() => {
    getTvShow().then((res) => {
      setAllTvShow(res.data);
      setFilteredShows(res.data);
    });
  }, []);

  const [currentPage, setCurrentPage] = useState(1);
  const listPerPage = 28;
  const indexOfLastList = currentPage * listPerPage;
  const indexOfFirstList = indexOfLastList - listPerPage;
  const currentList = filteredShows.slice(indexOfFirstList, indexOfLastList);

  const pageNumbers = Math.ceil(filteredShows.length / listPerPage);

  const nextPage = () => {
    if (currentPage < pageNumbers) {
      let nextPage = currentPage + 1;
      setCurrentPage(nextPage);
    }
  };

  const prevPage = () => {
    if (currentPage > 1) {
      let prevPage = currentPage - 1;
      setCurrentPage(prevPage);
    }
  };

  const handleChange = (e) => {
    let showName = e.target.value;

    setFilteredShows(
      filteredShows?.filter((show) =>
        show.name.toLowerCase().includes(showName.toLowerCase())
      )
    );

    if (!e.target.value) setFilteredShows(allTvShow);
  };

  return (
    <Layout
      handleChange={handleChange}
      allTvShow={allTvShow}
      setFilteredShows={setFilteredShows}
      session={session}
    >
      <Head>
        <title>Vozy-TV</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1 className="display-4 text-muted">Show available for you.. </h1>
      <div className="container">
        <div className="row">
          {filteredShows.length > 0 &&
            currentList.map((tv, index) => (
              <Card key={index} src={tv.image.medium} title={tv.name} />
            ))}
        </div>
      </div>
      <Pagination
        currentPage={currentPage}
        pageNumbers={pageNumbers}
        nextPage={nextPage}
        prevPage={prevPage}
      />
    </Layout>
  );
}

export const getServerSideProps = async (context) => {
  const session = await getSession(context);

  if (!session)
    return {
      redirect: {
        destination: "/login",
      },
    };

  return {
    props: {
      session,
    },
  };
};
